{"version":3,"sources":["webpack:///rediscrowdscores.js","webpack:///webpack/bootstrap 2c8b6ad018bd5e106652","webpack:///./rediscrowdscores.js","webpack:///./Crowdscores.js","webpack:///external \"bluebird\"","webpack:///external \"querystring\"","webpack:///external \"redis\"","webpack:///external \"request\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","camelize","str","replace","match","index","toLowerCase","toUpperCase","isKeyEmpty","key","Promise","resolve","reject","client","keysAsync","then","replies","length","updateGroupTable","multi","leagueTables","competition_id","data","i","group","round","name","rpush","j","leagueTable","zadd","position","dbid","hmset","goalsAway","draws","wins","points","goalsAgainst","goalDiff","goalsFor","gamesPlayed","losses","execAsync","getGroupTable","arguments","undefined","zrangeAsync","dbids","hgetall","getAllGroupTable","groups","goupsPromise","map","all","table","getTeams","sort","a","b","nameA","nameB","hgetallAsync","keys","Object","smembers","result","forEach","Array","isArray","matches","push","updateTeamDetail","promises","teams","parseInt","competition_ids","latitude","longitude","stadium","defaultHomeVenue","geolocation","del","players","player","sadd","number","shortName","getTeam","team","smembersAsync","updateMatchesTable","start","toString","capacity","venue","awayGoals","homeGoals","homeTeam","awayTeam","dismissals","home","away","isResult","currentState","updateMatcheDetail","homePlayers","JSON","stringify","awayPlayers","matchevents","Objects","penaltyShootout","getMatches","hmget","homeTeamId","awayTeamId","getMatch","console","log","hasOwnProperty","lineup","parse","defineProperty","value","_Crowdscores","_Crowdscores2","_redis","_redis2","_bluebird","_bluebird2","promisifyAll","RedisClient","prototype","Multi","createClient","port","host","hmsetAsync","shortCode","hsetAsync","error","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_request","_request2","_querystring","_querystring2","baseUrl","Crowdscores","apiKey","this","get","method","query","makeRequest","_makeRequest","isNaN","options","url","qs","headers","x-crowdscores-api-key","response","body","statusCode","require"],"mappings":"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","file":"rediscrowdscores.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!*****************************!*\\\n  !*** ./rediscrowdscores.js ***!\n  \\*****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.client = undefined;\n\texports.updateGroupTable = updateGroupTable;\n\texports.getGroupTable = getGroupTable;\n\texports.getAllGroupTable = getAllGroupTable;\n\texports.getTeams = getTeams;\n\texports.updateTeamDetail = updateTeamDetail;\n\texports.getTeam = getTeam;\n\texports.updateMatchesTable = updateMatchesTable;\n\texports.updateMatcheDetail = updateMatcheDetail;\n\texports.getMatches = getMatches;\n\texports.getMatch = getMatch;\n\t\n\tvar _Crowdscores = __webpack_require__(/*! ./Crowdscores */ 1);\n\t\n\tvar _Crowdscores2 = _interopRequireDefault(_Crowdscores);\n\t\n\tvar _redis = __webpack_require__(/*! redis */ 4);\n\t\n\tvar _redis2 = _interopRequireDefault(_redis);\n\t\n\tvar _bluebird = __webpack_require__(/*! bluebird */ 2);\n\t\n\tvar _bluebird2 = _interopRequireDefault(_bluebird);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_bluebird2.default.promisifyAll(_redis2.default.RedisClient.prototype);\n\t_bluebird2.default.promisifyAll(_redis2.default.Multi.prototype);\n\t\n\tvar client = exports.client = _redis2.default.createClient({ port: 6379, host: 'redis' });\n\tvar multi = client.multi();\n\t/*\n\t*\tcompetition ID 267 for Euro\n\t*\n\t*/\n\tvar competition_id = 267;\n\tvar c = new _Crowdscores2.default('3063739e8f544121ba1bbb7008aa044c');\n\t\n\tfunction camelize(str) {\n\t    return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n\t        if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n\t        return index == 0 ? match.toLowerCase() : match.toUpperCase();\n\t    });\n\t}\n\t\n\tfunction isKeyEmpty(key) {\n\t    return new Promise(function (resolve, reject) {\n\t        client.keysAsync(key).then(function (replies) {\n\t            if (replies.length < 1) {\n\t                resolve(true);\n\t            } else {\n\t                reject('Key is not empty');\n\t            }\n\t        });\n\t    });\n\t}\n\t\n\tfunction getGroup(key) {}\n\t\n\tfunction updateGroupTable() {\n\t    var multi = client.multi();\n\t    return c.leagueTables({ competition_id: competition_id }).then(function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            var group = data[i].round.name.replace(\"Group \", \"\").toLowerCase();\n\t            multi.rpush('groups', group);\n\t            for (var j = 0; j < data[i].leagueTable.length; j++) {\n\t                var leagueTable = data[i].leagueTable[j];\n\t                multi.zadd('groups:' + group, leagueTable.position, leagueTable.dbid);\n\t\n\t                multi.hmset('teams:' + leagueTable.dbid, ['group', group]);\n\t                multi.hmset('groups:' + group + ':' + leagueTable.dbid, ['goalsAway', leagueTable.goalsAway, 'draws', leagueTable.draws, 'team', leagueTable.name, 'wins', leagueTable.wins, 'points', leagueTable.points, 'dbid', leagueTable.dbid, 'goalsAgainst', leagueTable.goalsAgainst, 'goalDiff', leagueTable.goalDiff, 'goalsFor', leagueTable.goalsFor, 'shortCode', leagueTable.goalsFor, 'name', camelize(leagueTable.name), 'gamesPlayed', leagueTable.gamesPlayed, 'losses', leagueTable.losses, 'position', leagueTable.position]);\n\t            }\n\t        };\n\t        return multi.execAsync();\n\t    });\n\t}\n\t\n\tfunction getGroupTable() {\n\t    var group = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    var multi = client.multi();\n\t    return client.zrangeAsync(\"groups:\" + group, 0, -1).then(function (dbids) {\n\t        for (var i = 0; i < dbids.length; i++) {\n\t            multi.hgetall(\"groups:\" + group + \":\" + dbids[i]);\n\t        }\n\t        return multi.execAsync();\n\t    });\n\t}\n\t\n\tfunction getAllGroupTable() {\n\t    var groups = ['a', 'b', 'c', 'd', 'e', 'f'];\n\t    var obj = {};\n\t    var goupsPromise = ['a', 'b', 'c', 'd', 'e', 'f'].map(function (group) {\n\t        return getGroupTable(group);\n\t    });\n\t    return Promise.all(goupsPromise).then(function (table) {\n\t        for (var i = 0; i < table.length; i++) {\n\t            obj[groups[i]] = table[i];\n\t        }\n\t        return obj;\n\t    });\n\t}\n\t\n\tfunction getTeams() {\n\t    var sort = function sort(a, b) {\n\t        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n\t        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n\t        if (nameA < nameB) {\n\t            return -1;\n\t        }\n\t        if (nameA > nameB) {\n\t            return 1;\n\t        }\n\t\n\t        // names must be equal\n\t        return 0;\n\t    };\n\t    return client.hgetallAsync(\"teams\").then(function (data) {\n\t        var multi = client.multi();\n\t        var keys = Object.keys(data);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            multi.hgetall(\"teams:\" + data[keys[i]]);\n\t            multi.smembers(\"teams:\" + data[keys[i]] + ':matches');\n\t        }\n\t        return multi.execAsync().then(function (data) {\n\t            var result = [];\n\t            data.forEach(function (data, i) {\n\t                if (!Array.isArray(data)) {\n\t                    result.push(data);\n\t                } else {\n\t                    result[result.length - 1].matches = data;\n\t                }\n\t            });\n\t            return result.sort(sort);\n\t        });\n\t    });\n\t}\n\t\n\tfunction updateTeamDetail() {\n\t    var multi = client.multi();\n\t    return client.hgetallAsync(\"teams\").then(function (data) {\n\t        var keys = Object.keys(data);\n\t        var promises = [];\n\t        for (var i = 0; i < keys.length; i++) {\n\t            promises.push(c.teams(parseInt(data[keys[i]]), { competition_ids: competition_id }));\n\t        }\n\t        return promises;\n\t    }).map(function (data) {\n\t        var latitude = '';\n\t        var longitude = '';\n\t        var stadium = '';\n\t        if (data.defaultHomeVenue) {\n\t            if (data.defaultHomeVenue.geolocation) {\n\t                latitude = data.defaultHomeVenue.geolocation.latitude;\n\t                longitude = data.defaultHomeVenue.geolocation.longitude;\n\t            }\n\t            stadium = data.defaultHomeVenue.name;\n\t        }\n\t        multi.hmset('teams:' + data.dbid, ['stadium', stadium, 'geoLat', latitude, 'geoLon', longitude, 'coach', '']);\n\t        //Player loop\n\t        multi.del('teams:' + data.dbid + ':players');\n\t        for (var i = 0; i < data.players.length; i++) {\n\t\n\t            var player = data.players[i];\n\t            ;\n\t            multi.sadd('teams:' + data.dbid + ':players', player.dbid);\n\t            multi.hmset('player:' + player.dbid, ['position', player.position, 'number', player.number, 'name', player.name, 'dbid', player.dbid, 'shortName', player.shortName]);\n\t        }\n\t        return multi.execAsync();\n\t    });\n\t}\n\t\n\tfunction getTeam() {\n\t    var id = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    var multi = client.multi();\n\t    var team;\n\t    return client.hgetallAsync('teams:' + id).then(function (data) {\n\t        if (!data) {\n\t            Promise.reject('Teams not found');\n\t        }\n\t        team = data;\n\t        return client.smembersAsync(\"teams:\" + team.dbid + ':players').then(function (data) {\n\t            for (var i = 0; i < data.length; i++) {\n\t                multi.hgetall('player:' + data[i]);\n\t            }\n\t            return multi.execAsync().then(function (data) {\n\t                team.players = data;\n\t                return team;\n\t            });\n\t        });\n\t    });\n\t}\n\t\n\tfunction updateMatchesTable() {\n\t    var multi = client.multi();\n\t    c.matches('', { competition_id: competition_id }).then(function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            multi.zadd('matches', data[i].start, data[i].dbid.toString());\n\t            var latitude = '';\n\t            var longitude = '';\n\t            var stadium = '';\n\t            var capacity = '';\n\t            if (data[i].venue) {\n\t                if (data[i].venue.geolocation) {\n\t                    latitude = data[i].venue.geolocation.latitude;\n\t                    longitude = data[i].venue.geolocation.longitude;\n\t                }\n\t                stadium = data[i].venue.name;\n\t                capacity = data[i].venue.capacity || '';\n\t            }\n\t\n\t            multi.hmset('matches:' + data[i].dbid.toString(), ['awayGoals', data[i].awayGoals, 'homeGoals', data[i].homeGoals, 'homeTeam', data[i].homeTeam.name, 'homeTeamId', data[i].homeTeam.dbid, 'awayTeam', data[i].awayTeam.name, 'awayTeamId', data[i].awayTeam.dbid, 'dbid', data[i].dbid, 'homeDismissals', data[i].dismissals.home, 'awayDismissals', data[i].dismissals.away, 'isResult', data[i].isResult, 'start', data[i].start, 'stadium', stadium, 'geoLat', latitude, 'geoLon', longitude, 'stadiumCapacity', stadium, 'currentState', data[i].currentState, 'nextState', data[i].currentState]);\n\t\n\t            multi.sadd('teams:' + data[i].homeTeam.dbid + ':matches', data[i].dbid);\n\t            multi.sadd('teams:' + data[i].awayTeam.dbid + ':matches', data[i].dbid);\n\t        }\n\t        return multi.execAsync();\n\t    });\n\t}\n\t\n\tfunction updateMatcheDetail(id) {\n\t    var multi = client.multi();\n\t    return c.matches(parseInt(id)).then(function (data) {\n\t        multi.hmset('matches:' + data.dbid.toString(), ['awayGoals', data.awayGoals, 'homeGoals', data.homeGoals, 'homeDismissals', data.dismissals.home, 'awayDismissals', data.dismissals.away, 'isResult', data.isResult, 'homePlayers', data.homePlayers.length ? JSON.stringify(data.homePlayers) : null, 'awayPlayers', data.awayPlayers.length ? JSON.stringify(data.awayPlayers) : null, 'matchevents', data.matchevents.length ? JSON.stringify(data.matchevents) : null, 'penaltyShootout', Objects.keys(data.penaltyShootout).length ? JSON.stringify(data.penaltyShootout) : null]);\n\t    });\n\t    return multi.execAsync();\n\t}\n\t\n\tfunction getMatches() {\n\t    return client.zrangeAsync('matches', 0, -1).then(function (data) {\n\t        var multi = client.multi();\n\t        for (var i = 0; i < data.length; i++) {\n\t            //Ugly but makes page size smaller\n\t            multi.hmget(\"matches:\" + data[i], ['awayGoals', 'homeGoals', 'homeTeam', 'homeTeamId', 'awayTeam', 'awayTeamId', 'dbid', 'stadium', 'start', 'currentState']);\n\t        }\n\t        return multi.execAsync().map(function (data) {\n\t            return {\n\t                'awayGoals': data[0],\n\t                'homeGoals': data[1],\n\t                'homeTeam': data[2],\n\t                'homeTeamId': data[3],\n\t                'awayTeam': data[4],\n\t                'awayTeamId': data[5],\n\t                'dbid': data[6],\n\t                'stadium': data[7],\n\t                'start': data[8],\n\t                'currentState': data[9]\n\t            };\n\t        });\n\t    });\n\t}\n\t\n\tfunction getMatch() {\n\t    var dbid = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    return client.hgetallAsync('matches:' + dbid).then(function (match) {\n\t        console.log('match', match);\n\t        if (!match) {\n\t            Promise.reject('Match not found');\n\t        }\n\t        if (!match.hasOwnProperty('awayPlayers') && !match.hasOwnProperty('homePlayers') && !match.awayPlayers && !match.homePlayers) {\n\t\n\t            return Promise.all([match.homeTeamId, match.awayTeamId].map(getTeam)).then(function (teams) {\n\t                match.players = {\n\t                    lineup: false,\n\t                    homeTeam: teams[0].players,\n\t                    awayTeam: teams[1].players\n\t                };\n\t                return match;\n\t            }).catch(function () {\n\t                return match;\n\t            });\n\t        } else {\n\t            match.players = {\n\t                lineup: true,\n\t                homeTeam: JSON.parse(match.homePlayers),\n\t                awayTeam: JSON.parse(match.awayPlayers)\n\t            };\n\t            delete match.awayPlayers;\n\t            delete match.homePlayers;\n\t            return match;\n\t        }\n\t    });\n\t}\n\t\n\t(function () {\n\t    //Set Up teams\n\t    isKeyEmpty('teams').then(function () {\n\t        return c.teams('', { competition_ids: competition_id });\n\t    }).map(function (data) {\n\t        return client.hmsetAsync('teams:' + data.dbid, ['name', camelize(data.name), 'team', data.name, 'dbid', data.dbid, 'shortCode', data.shortCode]).then(function () {\n\t            return data;\n\t        });\n\t    }).map(function (data) {\n\t        return client.hsetAsync('teams', camelize(data.name), data.dbid.toString());\n\t    }).catch(function (error) {\n\t        console.log('team', error);\n\t    });\n\t\n\t    //SET UP GROUPS\n\t    isKeyEmpty('groups').then(updateGroupTable).catch(function (error) {\n\t        console.log('groups ' + error);\n\t    });\n\t\n\t    //SET UP matches\n\t    isKeyEmpty('matches').then(updateMatchesTable).catch(function (error) {\n\t        console.log('matches ' + error);\n\t    });\n\t})();\n\n/***/ },\n/* 1 */\n/*!************************!*\\\n  !*** ./Crowdscores.js ***!\n  \\************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _request = __webpack_require__(/*! request */ 5);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tvar _querystring = __webpack_require__(/*! querystring */ 3);\n\t\n\tvar _querystring2 = _interopRequireDefault(_querystring);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar baseUrl = \"https://api.crowdscores.com/api/v1\";\n\t\n\tvar Crowdscores = function () {\n\t    _createClass(Crowdscores, null, [{\n\t        key: 'baseUrl',\n\t        get: function get() {\n\t            return baseUrl;\n\t        }\n\t    }]);\n\t\n\t    function Crowdscores(apiKey) {\n\t        _classCallCheck(this, Crowdscores);\n\t\n\t        this.apiKey = apiKey;\n\t    }\n\t\n\t    _createClass(Crowdscores, [{\n\t        key: '_makeRequest',\n\t        value: function _makeRequest() {\n\t            var method = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n\t            var query = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t            return Crowdscores.makeRequest(this.apiKey, method, query);\n\t        }\n\t    }, {\n\t        key: 'competitions',\n\t        value: function competitions() {\n\t            var method = '/competitions/';\n\t            return this._makeRequest(method);\n\t        }\n\t    }, {\n\t        key: 'footballStates',\n\t        value: function footballStates() {\n\t            var method = '/football_states/';\n\t            return this._makeRequest(method);\n\t        }\n\t    }, {\n\t        key: 'teams',\n\t        value: function teams() {\n\t            var id = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t            var query = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t            var method = void 0;\n\t            if (isNaN(id)) {\n\t                method = '/teams/';\n\t            } else {\n\t                method = '/teams/' + id;\n\t            }\n\t\n\t            return this._makeRequest(method, query);\n\t        }\n\t    }, {\n\t        key: 'leagueTables',\n\t        value: function leagueTables() {\n\t            var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t            var method = '/league-tables';\n\t            return this._makeRequest(method, query);\n\t        }\n\t    }, {\n\t        key: 'matches',\n\t        value: function matches() {\n\t            var id = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t            var query = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t            var method = void 0;\n\t            if (isNaN(id)) {\n\t                method = '/matches/';\n\t            } else {\n\t                method = '/matches/' + id;\n\t            }\n\t\n\t            return this._makeRequest(method, query);\n\t        }\n\t    }, {\n\t        key: 'playerstats',\n\t        value: function playerstats() {\n\t            var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t            method = '/playerstats/';\n\t\n\t            return this._makeRequest(method, query);\n\t        }\n\t    }], [{\n\t        key: 'makeRequest',\n\t        value: function makeRequest(apiKey) {\n\t            var method = arguments.length <= 1 || arguments[1] === undefined ? '/' : arguments[1];\n\t            var query = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t            baseUrl + method;\n\t\n\t            var qs = _querystring2.default.stringify(query);\n\t            var options = {\n\t                url: baseUrl + method,\n\t                qs: query,\n\t                headers: {\n\t                    'x-crowdscores-api-key': apiKey\n\t                }\n\t            };\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                (0, _request2.default)(options, function (error, response, body) {\n\t                    if (!error && response.statusCode == 200) {\n\t                        var data = JSON.parse(body);\n\t                        resolve(data);\n\t                    } else {\n\t                        reject('error: ' + response.statusCode);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Crowdscores;\n\t}();\n\t\n\tmodule.exports = Crowdscores;\n\n/***/ },\n/* 2 */\n/*!***************************!*\\\n  !*** external \"bluebird\" ***!\n  \\***************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"bluebird\");\n\n/***/ },\n/* 3 */\n/*!******************************!*\\\n  !*** external \"querystring\" ***!\n  \\******************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"querystring\");\n\n/***/ },\n/* 4 */\n/*!************************!*\\\n  !*** external \"redis\" ***!\n  \\************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"redis\");\n\n/***/ },\n/* 5 */\n/*!**************************!*\\\n  !*** external \"request\" ***!\n  \\**************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"request\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** rediscrowdscores.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2c8b6ad018bd5e106652\n **/","import Crowdscores from \"./Crowdscores\";\nimport redis from \"redis\";\nimport bluebird from \"bluebird\";\n\nbluebird.promisifyAll(redis.RedisClient.prototype);\nbluebird.promisifyAll(redis.Multi.prototype);\n\nexport var client = redis.createClient({port:6379,host:'redis'});\nvar multi = client.multi();\n/*\n*\tcompetition ID 267 for Euro\n*\n*/\nconst competition_id = 267;\nvar c = new Crowdscores('3063739e8f544121ba1bbb7008aa044c');\n\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n    if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n    return index == 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n}\n\nfunction isKeyEmpty(key) {\n    return new Promise((resolve, reject) => {\n        client.keysAsync(key).then((replies) => {\n            if(replies.length < 1){\n                resolve(true);\n            } else {\n                reject('Key is not empty')\n            }\n        });\n    });\n}\n\nfunction getGroup(key) {\n\n}\n\nexport function updateGroupTable() {\n    var multi = client.multi();\n    return c.leagueTables({competition_id}).then((data) => {\n        for (let i = 0; i < data.length; i++) {\n            var group = data[i].round.name.replace(\"Group \", \"\").toLowerCase();\n            multi.rpush('groups', group);\n            for (let j = 0; j < data[i].leagueTable.length; j++) {\n                var leagueTable = data[i].leagueTable[j];\n                multi.zadd(\n                    'groups:'+group,\n                    leagueTable.position,\n                    leagueTable.dbid\n                );\n\n                multi.hmset('teams:'+leagueTable.dbid,['group', group])\n                multi.hmset('groups:'+group+':'+leagueTable.dbid,\n                [\n                    'goalsAway', leagueTable.goalsAway,\n                    'draws', leagueTable.draws,\n                    'team', leagueTable.name,\n                    'wins', leagueTable.wins,\n                    'points',leagueTable.points,\n                    'dbid',leagueTable.dbid,\n                    'goalsAgainst',leagueTable.goalsAgainst,\n                    'goalDiff',leagueTable.goalDiff,\n                    'goalsFor',leagueTable.goalsFor,\n                    'shortCode',leagueTable.goalsFor,\n                    'name', camelize(leagueTable.name),\n                    'gamesPlayed', leagueTable.gamesPlayed,\n                    'losses', leagueTable.losses,\n                    'position', leagueTable.position\n                ]);\n            }\n        };\n        return multi.execAsync();\n    });\n\n}\n\nexport function getGroupTable(group='') {\n    var multi = client.multi();\n    return client.zrangeAsync(\"groups:\"+group, 0, -1).then((dbids) => {\n\t\tfor (var i = 0; i < dbids.length; i++) {\n\t\t\tmulti.hgetall(\"groups:\"+group+\":\"+dbids[i]);\n\t\t}\n        return multi.execAsync();\n\t});\n\n}\n\nexport function getAllGroupTable() {\n    let groups = ['a','b','c','d','e','f'];\n    let obj = {};\n    let goupsPromise = ['a','b','c','d','e','f'].map(group=>getGroupTable(group));\n    return Promise.all(goupsPromise).then(table =>{\n        for (var i = 0; i < table.length; i++) {\n            obj[groups[i]] = table[i]\n        }\n        return obj;\n    });\n}\n\n\n export function getTeams(){\n     var sort = function(a, b) {\n          var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n          var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n\n          // names must be equal\n          return 0;\n      };\n     return client.hgetallAsync(\"teams\").then((data) => {\n         var multi = client.multi();\n         var keys = Object.keys(data);\n         for(let i = 0; i < keys.length; i++ ){\n             multi.hgetall(\"teams:\"+data[keys[i]]);\n             multi.smembers(\"teams:\"+data[keys[i]]+':matches')\n         }\n         return multi.execAsync().then(data => {\n             var result = [];\n             data.forEach((data,i) => {\n                 if(!Array.isArray(data)){\n                     result.push(data)\n                 } else {\n                     result[result.length-1].matches = data;\n                 }\n            });\n            return result.sort(sort);\n        });\n     });\n }\n\nexport function updateTeamDetail(){\n    var multi = client.multi();\n    return client.hgetallAsync(\"teams\").then((data) => {\n        var keys = Object.keys(data);\n        var promises = [];\n        for(let i = 0; i < keys.length; i++ ){\n            promises.push(c.teams(\n                parseInt(data[keys[i]]),\n                {competition_ids:competition_id})\n            );\n        }\n        return promises;\n    }).map((data)=>{\n        var latitude = '';\n        var longitude = '';\n        var stadium = '';\n        if(data.defaultHomeVenue){\n            if(data.defaultHomeVenue.geolocation){\n                latitude = data.defaultHomeVenue.geolocation.latitude;\n                longitude = data.defaultHomeVenue.geolocation.longitude;\n            }\n                stadium = data.defaultHomeVenue.name;\n        }\n        multi.hmset('teams:'+data.dbid,\n        ['stadium', stadium,\n        'geoLat', latitude,\n        'geoLon', longitude,\n        'coach', '']);\n        //Player loop\n        multi.del('teams:'+data.dbid+':players');\n        for(let i=0; i< data.players.length; i++){\n\n            var player = data.players[i];\n            ;\n            multi.sadd('teams:'+data.dbid+':players', player.dbid);\n            multi.hmset('player:'+player.dbid,[\n                'position', player.position,\n                'number', player.number,\n                'name', player.name,\n                'dbid', player.dbid,\n                'shortName', player.shortName\n            ]);\n        }\n        return multi.execAsync();\n\n    });\n}\n\nexport function getTeam(id=''){\n    var multi = client.multi();\n    var team;\n    return client.hgetallAsync('teams:'+id).then((data) => {\n        if(!data){\n            Promise.reject('Teams not found');\n        }\n        team = data;\n        return client.smembersAsync(\"teams:\"+team.dbid+':players').then((data) => {\n            for(let i=0; i< data.length; i++){\n                multi.hgetall('player:'+data[i])\n            }\n            return multi.execAsync().then((data) => {\n                team.players = data;\n                return team;\n            });\n        });\n\n    });\n}\n\n\nexport function updateMatchesTable() {\n    var multi = client.multi();\n    c.matches('', {competition_id})\n    .then((data) => {\n        for (let i = 0; i < data.length; i++) {\n            multi.zadd(\n                'matches',\n                data[i].start,\n                data[i].dbid.toString()\n            );\n            var latitude = '';\n            var longitude = '';\n            var stadium = '';\n            var capacity = '';\n            if(data[i].venue){\n                if(data[i].venue.geolocation){\n                    latitude = data[i].venue.geolocation.latitude;\n                    longitude = data[i].venue.geolocation.longitude;\n\n                }\n                    stadium = data[i].venue.name;\n                    capacity = data[i].venue.capacity|| '';\n            }\n\n            multi.hmset('matches:'+data[i].dbid.toString(),\n            [\n                'awayGoals', data[i].awayGoals,\n                'homeGoals', data[i].homeGoals,\n                'homeTeam', data[i].homeTeam.name,\n                'homeTeamId', data[i].homeTeam.dbid,\n                'awayTeam', data[i].awayTeam.name,\n                'awayTeamId', data[i].awayTeam.dbid,\n                'dbid',data[i].dbid,\n                'homeDismissals', data[i].dismissals.home,\n                'awayDismissals', data[i].dismissals.away,\n                'isResult', data[i].isResult,\n                'start', data[i].start,\n                'stadium', stadium,\n                'geoLat', latitude,\n                'geoLon', longitude,\n                'stadiumCapacity', stadium,\n                'currentState', data[i].currentState,\n                'nextState', data[i].currentState,\n                ]\n            );\n\n            multi.sadd('teams:'+data[i].homeTeam.dbid+':matches', data[i].dbid)\n            multi.sadd('teams:'+data[i].awayTeam.dbid+':matches', data[i].dbid)\n        }\n        return multi.execAsync();\n    });\n}\n\nexport function updateMatcheDetail(id){\n    var multi = client.multi();\n    return c.matches(parseInt(id)).\n        then((data)=>{\n            multi.hmset('matches:'+data.dbid.toString(),\n            [\n                'awayGoals', data.awayGoals,\n                'homeGoals', data.homeGoals,\n                'homeDismissals', data.dismissals.home,\n                'awayDismissals', data.dismissals.away,\n                'isResult', data.isResult,\n                'homePlayers', data.homePlayers.length ? JSON.stringify(data.homePlayers): null,\n                'awayPlayers', data.awayPlayers.length ? JSON.stringify(data.awayPlayers): null,\n                'matchevents', data.matchevents.length ? JSON.stringify(data.matchevents): null,\n                'penaltyShootout', Objects.keys(data.penaltyShootout).length ? JSON.stringify(data.penaltyShootout): null,\n                ]\n            );\n        });\n    return multi.execAsync();\n}\n\nexport function getMatches(){\n    return client.zrangeAsync('matches',0, -1).then((data) => {\n        var multi = client.multi();\n        for(var i = 0; i < data.length; i++ ){\n            //Ugly but makes page size smaller\n            multi.hmget(\"matches:\"+data[i], [\n                'awayGoals',\n                'homeGoals',\n                'homeTeam',\n                'homeTeamId',\n                'awayTeam',\n                'awayTeamId',\n                'dbid',\n                'stadium',\n                'start',\n                'currentState'\n            ]);\n        }\n        return multi.execAsync().map((data) => {\n            return {\n                'awayGoals':data[0],\n                'homeGoals':data[1],\n                'homeTeam':data[2],\n                'homeTeamId':data[3],\n                'awayTeam':data[4],\n                'awayTeamId':data[5],\n                'dbid':data[6],\n                'stadium':data[7],\n                'start':data[8],\n                'currentState':data[9]\n            };\n        });\n    });\n}\n\nexport function getMatch(dbid=''){\n    return client.hgetallAsync('matches:'+dbid).then((match) => {\n        console.log('match',match )\n        if(!match){\n            Promise.reject('Match not found');\n        }\n        if(\n            (!match.hasOwnProperty('awayPlayers') && !match.hasOwnProperty('homePlayers')) &&\n            (!match.awayPlayers  && !match.homePlayers)\n        ){\n\n        return Promise.all([match.homeTeamId,match.awayTeamId].map(getTeam)).then(teams => {\n                 match.players = {\n                     lineup: false,\n                     homeTeam:teams[0].players,\n                     awayTeam:teams[1].players\n                 };\n                 return match\n         }).catch(()=>match);\n\n        }else {\n            match.players = {\n                lineup: true,\n                homeTeam:JSON.parse(match.homePlayers),\n                awayTeam:JSON.parse(match.awayPlayers)\n            };\n            delete match.awayPlayers;\n            delete match.homePlayers;\n            return match;\n        }\n    });\n}\n\n(function(){\n    //Set Up teams\n    isKeyEmpty('teams').then(() => {\n        return c.teams('', {competition_ids:competition_id});\n    }).map((data) => {\n\t\treturn client.hmsetAsync('teams:'+data.dbid,\n\t\t\t['name', camelize(data.name),\n            'team', data.name,\n            'dbid', data.dbid,\n            'shortCode', data.shortCode]\n\t\t).then(() => {\n\t\t\treturn data;\n\t\t\t});\n    }).map((data) => {\n\t\treturn client.hsetAsync('teams' ,camelize(data.name), data.dbid.toString());\n\t}).catch((error) => {\n        console.log('team' ,error)\n    });\n\n    //SET UP GROUPS\n    isKeyEmpty('groups')\n    .then(updateGroupTable)\n    .catch((error) => {\n        console.log('groups '+error)\n    });\n\n    //SET UP matches\n    isKeyEmpty('matches')\n    .then(updateMatchesTable)\n    .catch((error) => {\n        console.log('matches '+error)\n    });\n\n\n\n\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./rediscrowdscores.js\n **/","import request from 'request';\nimport querystring from 'querystring';\n\nconst baseUrl = \"https://api.crowdscores.com/api/v1\";\n\nclass Crowdscores {\n\n    static get baseUrl(){\n        return baseUrl;\n    }\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n\n    static makeRequest(apiKey, method = '/', query = {}) {\n        baseUrl + method\n\n        let qs = querystring.stringify(query)\n        let options = {\n            url: baseUrl+method,\n            qs: query,\n            headers: {\n                'x-crowdscores-api-key': apiKey\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            request(options, (error, response, body) => {\n                if (!error && response.statusCode == 200) {\n                    let data = JSON.parse(body);\n                    resolve(data);\n                } else {\n                    reject('error: '+ response.statusCode);\n                }\n            });\n        });\n    }\n\n    _makeRequest(method = '/', query = {}) {\n        return Crowdscores.makeRequest(this.apiKey, method, query)\n    }\n\n    competitions() {\n        let method = '/competitions/';\n        return this._makeRequest(method);\n    }\n\n    footballStates() {\n        let method = '/football_states/';\n        return this._makeRequest(method);\n    }\n\n    teams(id='', query = {}) {\n        let method;\n        if(isNaN(id)){\n            method = '/teams/';\n        } else {\n            method = '/teams/'+id;\n        }\n\n        return this._makeRequest(method, query);\n    }\n\n    leagueTables(query = {}) {\n        let method ='/league-tables';\n        return this._makeRequest(method, query);\n    }\n\n    matches(id='', query = {}) {\n        let method;\n        if(isNaN(id)){\n            method = '/matches/';\n        } else {\n            method = '/matches/'+id;\n        }\n\n        return this._makeRequest(method, query);\n    }\n\n    playerstats(query = {}) {\n        method = '/playerstats/';\n\n        return this._makeRequest(method, query);\n    }\n}\n\n\n\nmodule.exports = Crowdscores;\n\n\n\n/** WEBPACK FOOTER **\n ** ./Crowdscores.js\n **/","module.exports = require(\"bluebird\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bluebird\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"querystring\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"querystring\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"redis\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"redis\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"request\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"request\"\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}